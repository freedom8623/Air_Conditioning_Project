C51 COMPILER V9.54   MAIN                                                                  11/20/2023 18:28:42 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Driver;C:\Keil_v5\C51\INC\STC) 
                    -DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "DS18B20\bes_ds18b20.h"
   2          #include "IR\IR.h"
   3          #include "seg\seg.h"
   4          #include "LED\LED.h"
   5          #include "timer\timer.h"
   6          #include "Uart\Uart.h"
   7          #include "adc\adc.h"
   8          
   9          #define ADC_FLAG 0x10
  10          
  11          //******引脚定义******//
  12          sbit BUZZ = P1^7;    //蜂鸣器
  13          sbit JK1 = P1^6;     //继电器JK1
  14          sbit JK2 = P1^5;     //继电器JK2
  15          sbit MG1 = P1^4;     //风扇
  16          sbit AIR = P1^2;     //空气质量传感器
  17          
  18          //*****函数声明******//
  19          void Timer1_Init(void);           //1毫秒@12.000M
  20          void Seg_Proc(void);              //数码管处理函数
  21          void IR_Proc(void);               //红外处理函数
  22          void delay_ms(unsigned int ms);   //定时器延时
  23          void BUZZ_proc(unsigned char ms); // 蜂鸣器处理函数
  24          void Duty(unsigned char duty);    //占空比调节函数
  25          void ADC_Proc(void);              //ADC处理函数
  26          
  27          //********数码管变量声明*********//
  28          unsigned int Seg_Slow_Down=0;
  29          unsigned char pos = 0;          //数码管显示哪一位
  30          unsigned char seg_string[7];    //转化数据存储
  31          unsigned char seg_buf[8];       //数码管存储
  32          
  33          //********红外接收变量*******//
  34          unsigned char IR_Slow_Down = 0;
  35          unsigned char IR_Buff[4] = {0,0,0,0}; //接收红外的值
  36          unsigned char storage_arr = 0;        //红外接收存储的值
  37          unsigned char S2_ON = 0;              //状态切换
  38          
  39          //****计数变量*****//
  40          bit flag = 0;
  41          unsigned int count = 0;          //延时计数
  42          unsigned char Duty_count = 0;    //占空比计数
  43          unsigned char fan_add = 0;      //风扇计数
  44          
  45          //*****LED******//
  46          unsigned char Led_Slow_Down = 0;  //LED减速
  47          unsigned char ucled = 0xff;      //初始化全灭
  48          unsigned char Led_arr[9] = {0xff,0xfe,0xfd,0xfb,0xf7,0xef,0xdf,0xbf,0x7f}; //LED2~LED9流水灯
  49          unsigned char i = 0;             //数组值增加
  50          
  51          //***温度传感器变量****//
  52          unsigned int temp = 0;   //存储温度传感器的值
  53          float add_temp = 0.0;    //按键增加温度
  54          unsigned char fan = 0;   //风扇占空比值
C51 COMPILER V9.54   MAIN                                                                  11/20/2023 18:28:42 PAGE 2   

  55          
  56          //***ADC变量***//
  57          unsigned char ADC_Slow_Down = 0;  
  58          float ADC_Get = 0.0; //ADC获取变量值
  59          
  60          void main()
  61          {
  62   1        P1M0 = 0x90; P1M1 = 0x00; //使能P1^4 P1^7为推挽模式
  63   1        BUZZ = 0;                 //蜂鸣器关闭
  64   1        IR_Init();                //中断初始化
  65   1        Timer0_Init();            //定时器1初始化
  66   1        Timer1_Init();            //定时器2初始化
  67   1        Uart1_Init();             //串口1初始化
  68   1        InitADC();                //ADC初始化
  69   1        do
  70   1        {
  71   2          temp = rd_temperature() / 16.0;
  72   2        }while(temp == 85);       //初始化温度传感器85
  73   1        EA = 1;                   //总中断打开
  74   1        sprintf((char *)seg_string,"    "); //上电数码管初始化
  75   1        Seg_Tran(seg_string,seg_buf);
  76   1      
  77   1        MG1 = 0;   //P1^4初始化
  78   1        JK1 = 0;   //P1^6初始化
  79   1        JK2 = 0;   //P1^5初始化
  80   1        
  81   1        while(1)
  82   1        {
  83   2          IR_Proc();      //红外接收处理函数
  84   2          InFrared_Init();//红外读取数据
  85   2          Seg_Proc();     //数码管显示处理函数
  86   2          Duty(fan);      //设置风扇占空比函数
  87   2      //测试程序    ADC_Proc();   
  88   2        }
  89   1      }
  90          
  91          //***红外接收处理函数****//
  92          
  93          void IR_Proc(void)
  94          {
  95   1        if(IR_Slow_Down) return;
  96   1          IR_Slow_Down = 1;
  97   1        
  98   1        storage_arr = IR_Buff[1];
  99   1        switch(storage_arr)
 100   1        {
 101   2          case 0x66:       //S2  OFF\ON 
 102   2            S2_ON = 1;
 103   2            IR_Buff[1] = 0;
 104   2          break;
 105   2          case 0xff:      //S3 L
 106   2          if(S2_ON == 2)
 107   2          {
 108   3            if(fan_add < 4) fan_add ++;  //调节风扇转速
 109   3            if(i < 4) i++;      
 110   3            ucled = Led_arr[i];          //LED亮哪一个
 111   3            BUZZ_proc(100);              //蜂鸣器响100ms
 112   3          
 113   3            if(fan_add == 1)
 114   3            {
 115   4              if(fan < 8) fan += 5;  
 116   4            }
C51 COMPILER V9.54   MAIN                                                                  11/20/2023 18:28:42 PAGE 3   

 117   3            else if(fan_add >= 2 && fan_add < 4)
 118   3            {
 119   4              if(fan <= 8) fan += 1;
 120   4            } 
 121   3          }
 122   2            IR_Buff[1] = 0; 
 123   2          break;    
 124   2          case 0x44:      //S4   R
 125   2          if(S2_ON == 2)
 126   2          {
 127   3            BUZZ_proc(100);
 128   3            if(fan_add > 0) fan_add --;
 129   3            if(i > 0) i--;
 130   3            ucled = Led_arr[i]; 
 131   3      
 132   3            if(fan_add < 3 && fan_add >= 1)
 133   3            {
 134   4              if(fan <= 8) fan -= 1;
 135   4            }
 136   3            else if(fan_add == 0)
 137   3            {
 138   4              if(fan <= 8 && fan > 0) fan -= 5;
 139   4            }
 140   3          }
 141   2            IR_Buff[1] = 0;
 142   2          break;
 143   2          case 0xAA:      //S5 DOWN
 144   2            BUZZ_proc(100);
 145   2            if(--add_temp <= 0.0)  //温度上下降变量
 146   2            {
 147   3              add_temp = 0.0;
 148   3            } 
 149   2            if(add_temp == 0)
 150   2            {
 151   3              JK1 = 0;   //P1^6
 152   3              JK2 = 1;   //P1^5   LED11制冷         
 153   3            }
 154   2            if(add_temp == 1)
 155   2            {
 156   3              JK1 = 1;   //P1^6
 157   3              JK2 = 1;   //P1^5   LED12熄灭       
 158   3            }
 159   2            
 160   2            IR_Buff[1] = 0;
 161   2          break;    
 162   2          case 0x55:      //S6 UP
 163   2            BUZZ_proc(100); 
 164   2            if(++add_temp >= 3.0) //温度上下降变量
 165   2            {
 166   3              add_temp = 3.0;
 167   3            }
 168   2            if(add_temp == 2)
 169   2            {
 170   3              JK1 = 1;   //P1^6
 171   3              JK2 = 1;   //P1^5   LED11熄灭
 172   3            }
 173   2            if(add_temp == 3)
 174   2            {
 175   3              JK1 = 1;   //P1^6
 176   3              JK2 = 0;   //P1^5   LED12制热
 177   3            }
 178   2            IR_Buff[1] = 0;
C51 COMPILER V9.54   MAIN                                                                  11/20/2023 18:28:42 PAGE 4   

 179   2          break;
 180   2        }
 181   1      }
 182          
 183          //****数码管处理函数****//
 184          void Seg_Proc(void)
 185          {
 186   1        if(Seg_Slow_Down) return;
 187   1          Seg_Slow_Down=1;
 188   1        
 189   1        switch(S2_ON)
 190   1        {
 191   2          case 1:
 192   2          BUZZ_proc(200); //蜂鸣器响200ms
 193   2          sprintf((char *)seg_string,"0.0.0.");
 194   2          Seg_Tran(seg_string,seg_buf); 
 195   2          delay_ms(100);
 196   2          JK1 = 0;   //P1^6
 197   2          JK2 = 1;   //P1^5  制冷模式
 198   2          S2_ON = 2;
 199   2          break;
 200   2          case 2:
 201   2          sprintf((char *)seg_string,"%3.1f",(float)(rd_temperature() / 16.0) + add_temp);  //数码管显示
 202   2          break;
 203   2        }
 204   1        Seg_Tran(seg_string,seg_buf); 
 205   1      }
 206          
 207          //***定时器1中断***//
 208          void Timer1_Isr(void) interrupt 3
 209          {
 210   1        if(++Seg_Slow_Down == 800) Seg_Slow_Down = 0;
 211   1        if(++IR_Slow_Down == 50) IR_Slow_Down = 0;
 212   1        if(++Led_Slow_Down == 50) Led_Slow_Down = 0;
 213   1        if(++ADC_Slow_Down == 10) ADC_Slow_Down = 0;
 214   1        TL1 = 0xCD;       //设置定时初始值
 215   1        TH1 = 0xD4;       //设置定时初始值  
 216   1      
 217   1        if(++Duty_count == 9)
 218   1        {
 219   2          Duty_count = 0;
 220   2        }
 221   1        if(flag == 1)
 222   1        {
 223   2          count--;
 224   2          if(count == 0)
 225   2            flag = 0;
 226   2        }
 227   1        if(S2_ON == 2)
 228   1          ucled &= 0xbf;
 229   1          
 230   1        Led_Disp(ucled);        //LED显示函数
 231   1        if(pos == 3) pos = 0;
 232   1        Seg_Disp(seg_buf,pos);  //数码管显示函数
 233   1        pos++;
 234   1      }
 235          
 236          void Timer0_Isr(void) interrupt 1
 237          {
 238   1        TL0 = 0xA4;       //设置定时初始值
 239   1        TH0 = 0xFF;       //设置定时初始值
 240   1      }
C51 COMPILER V9.54   MAIN                                                                  11/20/2023 18:28:42 PAGE 5   

 241          
 242          
 243          //***测试 ADC处理函数***//
 244          void ADC_Proc(void)   
 245          {
 246   1        if(ADC_Slow_Down) return;
 247   1          ADC_Slow_Down = 1;
 248   1        ADC_Get = (5.0 / 1024.0) * ((GetADCResult(0x02) << 2) | ADC_RESL);
 249   1      
 250   1        if(ADC_Get < 4.7 && ADC_Get > 4.5)
 251   1        {
 252   2          ucled &= 0xef;
 253   2        }
 254   1        else
 255   1        {
 256   2          ucled |= 0x10;
 257   2        }
 258   1        
 259   1        if(ADC_Get < 4.5 && ADC_Get > 4.3)
 260   1        {
 261   2          ucled &= 0xdf;
 262   2        }
 263   1        else
 264   1        {
 265   2          ucled |= 0x20;
 266   2        }
 267   1        
 268   1        if(ADC_Get < 4.3 && ADC_Get > 4.1)
 269   1        {
 270   2          ucled &= 0xbf;
 271   2        }
 272   1        else
 273   1        {
 274   2          ucled |= 0x40; 
 275   2        }
 276   1        
 277   1        if(ADC_Get < 4.1 && ADC_Get > 4.0)
 278   1        {
 279   2          ucled &= 0x7f;
 280   2        }
 281   1        else
 282   1        {
 283   2          ucled |=0x80;
 284   2        }
 285   1      }
 286          
 287          
 288          //***占空比调节函数***//
 289          void Duty(unsigned char duty)
 290          {
 291   1        if(Duty_count < duty)
 292   1        {
 293   2          MG1 = 1; 
 294   2        }
 295   1        else
 296   1        {
 297   2          MG1 = 0;
 298   2        }
 299   1      }
 300          
 301          //****蜂鸣器函数****//
 302          void BUZZ_proc(unsigned char ms)
C51 COMPILER V9.54   MAIN                                                                  11/20/2023 18:28:42 PAGE 6   

 303          {
 304   1        BUZZ = 1;
 305   1        delay_ms(ms);
 306   1        BUZZ = 0;
 307   1      }
 308          //*****定时器延时*****//
 309          void delay_ms(unsigned int ms)
 310          {
 311   1        count = ms;
 312   1        flag = 1;
 313   1        while(flag);
 314   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1148    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     53    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
